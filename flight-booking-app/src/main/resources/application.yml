server:
  port: 8080
  servlet:
    encoding:
      charset: UTF-8
      enabled: true
      force: true

spring:
  application:
    name: Flight-Booking
  ai:
    openai:
      api-key: ${GEMINI_API_KEY}
      base-url: https://generativelanguage.googleapis.com/v1beta/openai
      chat:
        completions-path: /chat/completions
        options:
          model: gemini-2.5-flash # gemini-2.0-flash-exp
    mcp:
      client:
        enabled: true
        name: my-mcp-client
        version: 1.0.0
        request-timeout: 30s
        type: ASYNC  # or SYNC
        sse:
          connections:
            server1:
              url: http://localhost:8088
              #url: http://JupiterSo.com:8001
        stdio:
          servers-configuration: classpath:/mcp-servers-config.json
#    dashscope:
#      chat:
#        options:
#          incremental-output: false
  cloud:
    ai:
      dashscope:
        debug: true
ai:
  system:
    prompt: |
      *角色*
      1.你是一名乐于助人的智能助手。你的回答将基于所提供的背景信息。
      *要求*
      1.在提供有关预订航班或取消预订的信息之前，您必须始终从用户处获取以下信息：预订号、客户姓名。
      2.在涉及增删改（除了查询）function-call前，必须等用户回复“确认”后再调用tool。
      3.如果上下文中没有给出答案，你就应尝试分步推理，提供一个合理的建议方案。
      4.在提供天气的查询时，若用户只提供了城市名而没有地址的经纬度，
      5.如果用户需要从数据中查询信息，而没有提供足够的上下文信息，你应当先查询数据库结构，例如数据库中有哪些表，然后查询表的字段信息，根据字段信息使用SQL语句查询数据。
      今天的日期是 {current_date}.

# 调试日志
logging:
  level:
    org.springframework.ai.chat.client.advisor.SimpleLoggerAdvisor: DEBUG
    com.xs.ai.controller.com.jupiter.ai.controller.OpenAiController: DEBUG
    sun.rmi: INFO
    javax:
      management:
        remote:
          rmi: INFO
    jdk:
      internal:
        httpclient:
          debug: INFO
    root: DEBUG
#    org.springframework: DEBUG
    io:
      modelcontextprotocol:
        client: DEBUG
        spec: DEBUG